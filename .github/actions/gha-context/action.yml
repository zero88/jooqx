name: context
description: 'Query project context'
inputs:
  profile:
    description: 'Project profile'
    required: true
  gpgKey:
    description: 'GPG private key'
    required: true
  gpgPassphrase:
    description: 'GPG passphrase'
    required: true
  gitTagPrefix:
    description: 'Git Tag prefix'
    required: true
    default: 'v'
  versionFile:
    description: 'Version pattern'
    required: true
    default: gradle.properties

outputs:
  branch:
    description: Branch or tag name
    value: ${{ steps.context.outputs.branch }}
  shouldBuild:
    description: Should build
    value: ${{ steps.context.outputs.decision_build }}
  shouldPublish:
    description: Should publish
    value: ${{ steps.context.outputs.decision_publish }}
  isRelease:
    description: Is release
    value: ${{ steps.context.outputs.isTag }}
  version:
    description: Project version
    value: ${{ steps.context.outputs.version }}
  semanticVersion:
    description: Should build
    value: ${{ steps.semantic.outputs.semanticVersion }}
  commitId:
    description: Project commit id
    value: ${{ steps.context.outputs.shortCommitId }}

runs:
  using: 'composite'
  steps:
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        git-user-signingkey: true
        git-commit-gpgsign: true
        git-tag-gpgsign: true
        git-push-gpgsign: false
        gpg-private-key: ${{ inputs.gpgKey }}
        passphrase: ${{ inputs.gpgPassphrase }}

    - name: Project context
      id: context
      uses: zero88/gh-project-context@v1.1
      with:
        mustSign: true
        nextVerMode: PATCH
        patterns: ${{ inputs.versionFile }}
        tagPrefix: ${{ inputs.gitTagPrefix }}
        releaseBranchPrefix: '${{ inputs.profile }}/release/'
        mergedReleaseMsgRegex: '^Merge pull request #[0-9]+ from .+/${{ inputs.profile }}/release/.+$'
        correctVerMsg: 'Correct ${{ inputs.profile }} version'
        releaseVerMsg: 'Release ${{ inputs.profile }} version'
        nextVerMsg: 'Next ${{ inputs.profile }} version'

    - name: Find semantic version
      id: semantic
      shell: bash
      run: |
        [[ "${{ steps.context.outputs.isTag }}" == "true" ]] && sv="" || sv=$(grep semanticVersion gradle.properties | cut -d'=' -f2)
        echo ::set-output name=semanticVersion::$sv


