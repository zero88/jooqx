name: release
description: 'Release project'
inputs:
  profile:
    description: 'Build profile'
    required: true
  version:
    description: 'Project version'
    required: true
  semanticVersion:
    description: 'Project semantic version'
    required: true
  hashVersion:
    description: 'Project hash commit'
    required: true
  isRelease:
    description: 'Is release'
    required: true
  githubToken:
    description: 'GitHub Token'
    required: true
  ossrhUser:
    description: 'OSSRH User'
    required: true
  ossrhToken:
    description: 'OSSRH Token'
    required: true
  gpgKey:
    description: 'GPG private key'
    required: true
  gpgPassphrase:
    description: 'GPG passphrase'
    required: true
  javaDist:
    description: 'Java distribution'
    required: true
    default: 'temurin'
  javaVersion:
    description: 'Java version'
    required: true
    default: '11'

runs:
  using: 'composite'
  steps:

    - uses: actions/setup-java@v2
      with:
        distribution: ${{ inputs.javaDist }}
        java-version: ${{ inputs.javaVersion }}
        cache: 'gradle'

    - name: Publish Sonatype OSSRH Snapshot
      if: inputs.isRelease != 'true'
      shell: bash
      run: |
        args=( -Pprofile=${{ inputs.profile }} \
               -Pversion=${{ inputs.version }} \
               -PsemanticVersion=${{ inputs.semanticVersion }} \
               -Pnexus.username=${{ inputs.ossrhUser }} \
               -Pnexus.password=${{ inputs.ossrhToken }} )
        ./gradlew publish "${args[@]}"

    - name: Import GPG key
      id: import_gpg
      if: inputs.isRelease == 'true'
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        git-user-signingkey: true
        gpg-private-key: ${{ inputs.gpgKey }}
        passphrase: ${{ inputs.gpgPassphrase }}

    - name: Publish Sonatype OSSRH
      if: inputs.isRelease == 'true'
      shell: bash
      run: |
        args=( -Pprofile=${{ inputs.profile }} \
               -Pversion=${{ inputs.version }} \
               -PsemanticVersion='${{ inputs.semanticVersion }}' \
               -PbuildHash=${{ inputs.hashVersion }} \
               -PbuildBy="GitHub-Action" \ 
               -Psigning.gnupg.homeDir=/home/runner/.gnupg \
               -Psigning.gnupg.keyName='${{ steps.import_gpg.outputs.keyid }}' \
               -Psigning.gnupg.passphrase='${{ inputs.gpgPassphrase }}' \
               -Pnexus.username='${{ inputs.ossrhUser }}' \
               -Pnexus.password='${{ inputs.ossrhToken }}' )
        ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Prelease "${args[@]}"
