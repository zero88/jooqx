name: jooqx

on:
  create:
    branches: [ 'release/**' ]
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '*.md'
      - 'LICENSE'
      - 'webdocs/**'
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches: [ main ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - '*.md'
      - 'LICENSE'
      - 'webdocs/**'

env:
  PROFILE: 'jooqx'
  JAVA_DIST: 'temurin'

jobs:
  context:
    uses: zero88/shared-ghactions/.github/workflows/project-context.yml@main
    with:
      profile: 'jooqx'
      skipBranchPattern: '^(jpa|rsql)/.*'
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  build:
    uses: zero88/shared-ghactions/.github/workflows/gradle-build.yml@main
    needs: context
    if: needs.context.outputs.shouldBuild == 'true'
    strategy:
      matrix:
#        java: [ '8', '17', '21' ]
        java: [ '8', '17' ]
        os: [ 'ubuntu-latest', 'windows-latest' ]
    name: Build & Test Java ${{ matrix.java }} (${{ matrix.os }})
    with:
      profile: 'jooqx'
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      javaVersion: ${{ matrix.java }}

  analysis:
    uses: zero88/shared-ghactions/.github/workflows/gradle-analysis.yml@main
    needs: context
    if: needs.context.outputs.shouldBuild == 'true'
    strategy:
      matrix:
#        java: [ '8', '17', '21' ]
        java: [ '8', '17' ]
        os: [ 'ubuntu-latest' ]
        itProfile: [ 'postgres:12-alpine', 'postgres:14-alpine', 'postgres:16-alpine', 'h2', 'mysql:8.3', 'mysql:8.0' ]
        sonarProfile: [ 'postgres:16-alpine' ]
      fail-fast: false
    name: Integtest ${{ matrix.itProfile }} | Java ${{ matrix.java }} (${{ matrix.os }})
    with:
      profile: 'jooqx:sonar'
      branch: ${{ needs.context.outputs.branch }}
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      javaVersion: ${{ matrix.java }}
      buildArgs: 'clean integtest:itTest -PitProfile=${{ matrix.itProfile }}'
      sonarqube: ${{ contains(matrix.sonarProfile, matrix.itProfile) && matrix.java == '17' }}
      sonarProps: '-PskipItTest=true' # to not run integtest again
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}
      sonarToken: ${{ secrets.OSS_SONARQUBE_TOKEN }}

  publish:
    needs: [ context, build, analysis ]
    if: needs.context.outputs.shouldPublish == 'true' || needs.context.outputs.isRelease == 'true'
    uses: zero88/shared-ghactions/.github/workflows/gradle-publish.yml@main
    strategy:
      matrix:
        java: [ '8', '17' ]
        os: [ 'ubuntu-latest' ]
    with:
      profile: 'jooqx'
      version: ${{ matrix.java == '17' && needs.context.outputs.version || format('{0}-jvm8', needs.context.outputs.version) }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      isRelease: ${{ needs.context.outputs.isRelease }}
      javaVersion: ${{ matrix.java }}
    secrets:
      ossrhUser: ${{ secrets.OSS_SONATYPE_USER }}
      ossrhToken: ${{ secrets.OSS_SONATYPE_PASSWORD }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  docs:
    uses: zero88/shared-ghactions/.github/workflows/antora-docs.yml@main
    needs: [ context, build ]
    with:
      profile: 'jooqx'
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      sha: ${{ needs.context.outputs.sha }}
      isRelease: ${{ needs.context.outputs.isRelease }}
      antoraCommand: ':integtest:postgres:generateJooq antoraDoc'
      antoraBuildDir: 'docs/build/docs/antora'
      syncDoc: ${{ needs.context.outputs.shouldPublish == 'true' || needs.context.outputs.isRelease == 'true' }}
      docBranch: ${{ needs.context.outputs.docBranch }}
      docVersion: ${{ needs.context.outputs.docVersion }}
      docCommitMsg: ${{ needs.context.outputs.docCommitMsg }}
      docCommitGPGSign: 'false'
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  webdocs:
    uses: zero88/shared-ghactions/.github/workflows/webdocs-communal-publish.yml@main
    needs: [ context, docs ]
    if: needs.context.outputs.shouldPublish == 'true' || needs.context.outputs.isRelease == 'true'
    with:
      docCommitMsg: ${{ needs.context.outputs.docCommitMsg }}
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [ context, publish, docs ]
    if: needs.context.outputs.isRelease == 'true'
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ env.PROFILE }} ${{ needs.context.outputs.version }}
          tag_name: ${{ needs.context.outputs.branch }}
          generate_release_notes: true
