name: rsql

on:
  create:
    branches: [ 'release/**' ]
  push:
    branches: [ main ]
    tags: [ 'rsql/v*' ]
    paths:
      - 'buildSrc'
      - 'rsql/**'
      - '.github/workflows/rsql.yml'
      - '.github/actions/*.yml'
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches: [ main ]
    paths:
      - 'buildSrc'
      - 'rsql/**'
      - '.github/workflows/rsql.yml'
      - '.github/actions/*.yml'

env:
  PROFILE: rsql

jobs:
  context:
    uses: zero88/shared-ghactions/.github/workflows/project-context.yml@main
    with:
      profile: 'rsql'
      gitTagPrefix: 'rsql/v'
      versionFile: rsql/gradle.properties
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  build:
    uses: zero88/shared-ghactions/.github/workflows/gradle-build.yml@main
    needs: context
    if: needs.context.outputs.shouldBuild == 'true'
    strategy:
      matrix:
        java: [ '8', '11', '17' ]
        os: [ 'ubuntu-latest', 'windows-latest' ]
    name: Build & Test Java ${{ matrix.java }} (${{ matrix.os }})
    with:
      profile: 'rsql'
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      javaVersion: ${{ matrix.java }}

  docs:
    uses: zero88/shared-ghactions/.github/workflows/antora-docs.yml@main
    needs: [ context, build ]
    with:
      profile: 'rsql'
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      sha: ${{ needs.context.outputs.sha }}
      isRelease: ${{ needs.context.outputs.isRelease }}
      antoraCommand: ':integtest:pg:generateJooq antoraDoc'
      antoraBuildDir: 'rsql/asciidoc/build/docs/antora'
      syncDoc: ${{ needs.context.outputs.shouldPublish == 'true' || needs.context.outputs.isRelease == 'true' }}
      docBranch: ${{ needs.context.outputs.docBranch }}
      docVersion: ${{ needs.context.outputs.docVersion }}
      docCommitMsg: ${{ needs.context.outputs.docCommitMsg }}
      docCommitGPGSign: 'false'
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  webdocs:
    uses: zero88/shared-ghactions/.github/workflows/webdocs-communal-publish.yml@main
    needs: [ context, docs ]
    if: needs.context.outputs.shouldPublish == 'true' || needs.context.outputs.isRelease == 'true'
    with:
      webdocsRepo: 'zero88/webdocs'
      webdocsRef: 'main'
      webdocsWorkflow: 'webdocs.yml'
      docCommitMsg: ${{ needs.context.outputs.docCommitMsg }}
    secrets:
      githubToken: ${{ secrets.OSS_GITHUB_TOKEN }}

  publish:
    needs: [ context, build ]
    if: needs.context.outputs.shouldPublish == 'true' || needs.context.outputs.isRelease == 'true'
    uses: zero88/shared-ghactions/.github/workflows/gradle-publish.yml@main
    with:
      profile: 'rsql'
      version: ${{ needs.context.outputs.version }}
      semanticVersion: ${{ needs.context.outputs.semanticVersion }}
      hashVersion: ${{ needs.context.outputs.commitId }}
      isRelease: ${{ needs.context.outputs.isRelease }}
    secrets:
      ossrhUser: ${{ secrets.OSS_SONATYPE_USER }}
      ossrhToken: ${{ secrets.OSS_SONATYPE_PASSWORD }}
      gpgKey: ${{ secrets.CI_GPG_PRIVATE_KEY }}
      gpgPassphrase: ${{ secrets.CI_GPG_PASSPHARSE }}

  release:
    needs: [ context, publish, docs ]
    if: needs.context.outputs.isRelease == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.OSS_GITHUB_TOKEN }}
        with:
          name: Release ${{ env.PROFILE }} ${{ needs.context.outputs.version }}
          tag_name: ${{ needs.context.outputs.branch }}
          generate_release_notes: false
